app:
  jwtSecret: jwtGrokonezSecretKey
  jwtExpiration: 30000000

server:
  host: localhost
  port: 8080
  ssl:
    key-password: alonealone
    key-store: classpath:key/ssl-server.jks
    key-store-provider: SUN
    key-store-type: JKS
  servlet:
    contextPath: /shortener/api

spring:
  profiles:
    active: "dev"
  main:
    banner-mode: "off"

---

spring:
  application:
    name: urlshortener
  profiles: dev
  jackson:
    date-format: yyyy-MM-dd'T'HH:mm:ss
    time-zone: ${TIME_ZONE:America/Manaus}
    serialization:
      fail-on-empty-beans: false
  jpa:
    show-sql: true
    database: postgresql
    properties.hibernate:
      format_sql: true
      jdbc.time_zone: ${TIME_ZONE:America/Manaus}
  datasource:
    platform: postgres
    url: jdbc:postgresql://${postgres.hostname:localhost}:${postgres.port:5432}/urlshortener
    driver-class-name: org.postgresql.Driver
    username: ${postgres.user:shortener}
    password: ${postgres.password:shortener}
    max-active: 300
    max-idle: 100
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 200MB
      max-request-size: 10485760

---

spring:
  application:
    name: urlshortener
  profiles: docker
  jackson:
    date-format: yyyy-MM-dd'T'HH:mm:ss
    time-zone: ${TIME_ZONE:America/Manaus}
    serialization:
      fail-on-empty-beans: false
  jpa:
    show-sql: true
    database: postgresql
    properties.hibernate:
      format_sql: true
      jdbc.time_zone: ${TIME_ZONE:America/Manaus}
  datasource:
    platform: postgres
    url: jdbc:postgresql://postgres:5432/urlshortener
    driver-class-name: org.postgresql.Driver
    username: ${postgres.user:shortener}
    password: ${postgres.password:shortener}
    max-active: 300
    max-idle: 100
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 200MB
      max-request-size: 10485760


flyway:
  url: jdbc:postgresql://${postgres.hostname:localhost}:${postgres.port:5432}/urlshortener
  user: ${postgres.user:shortener}
  password: ${postgres.password:shortener}
endpoints:
  cors.allowed-origins: "*"
api:
  baseName: urlshortener
toten.link: http://localhost:84
schedule.interval: 0 0 */4 * * ?
schedule.daily.interval: 0 0 0 * * ?
serverAddress.link: https://${SERVER_NAME:localhost}:82
loggin.level.org.hibernate.SQL: DEBUG